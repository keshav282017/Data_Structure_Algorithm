gfg : Count Occurences of Anagrams


Method 1 : use 2 maps and compare them if they equal or not 

// User function Template for Java

class Solution {

    int search(String pat, String txt) {
        // code here
         HashMap<Character,Integer> map1 = new HashMap<>() ; 
        HashMap<Character,Integer> map2 = new HashMap<>() ; 
        
        int i=0 , j= 0;
        int count = 0 ;
        int k = pat.length();
        
        
        for(int id=0;id<k ; id++){
            char ch = pat.charAt(id);
            map1.put(ch, map1.getOrDefault(ch, 0) + 1);
        }
        
        while(j < txt.length()){
            char ch = txt.charAt(j);
            map2.put(ch, map2.getOrDefault(ch, 0) + 1);
            
            
            if(j-i+1< k){
                j++;
            }
            else if(j-i+1 ==k){
                if(map1.equals(map2)) count++;
                 char left = txt.charAt(i);
                map2.put(left, map2.get(left) - 1);
                if (map2.get(left) == 0) {
                    map2.remove(left);
                }
                i++;
                j++;
            }
        }
        
        return count ;
    }
}

t.c -> 
s.c -> 


Method 2 : using count variable rather than one more map. 

